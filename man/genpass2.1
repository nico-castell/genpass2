.\" Automatically generated by Pandoc 2.14.0.3
.\"
.TH "genpass2" "1" "Oct 2021" "0.2.1" "GENPASS2"
.hy
.SH NAME
.PP
genpass2 - Uses the device file /dev/urandom to genereate very secure
passwords.
.SH SYNOPSIS
.PP
\f[B]genpass2\f[R]
.PP
\f[B]genpass2\f[R] 20
.SH DESCRIPTION
.PP
\f[B]genpass\f[R] reads as many characters as specified by the first
argument (8 characters if no arguments are passed) from /dev/urandom and
then processes all the data to turn the randomness into human readable
characters.
.SS Usage
.IP \[bu] 2
\f[B]Standalone:\f[R] You can run it without arguments, and it will
default to an 8 character password, or you can specify the length as
follows:
.RS 2
.IP
.nf
\f[C]
  genpass2 16
\f[R]
.fi
.PP
If you input a negative number (such as \f[C]-128\f[R]), the program
will error and tell you that it\[cq]s not a valid number.
Any arguments after the first will be ignored.
The maximum number of characters the password can have is 4,294,967,296.
.RE
.IP \[bu] 2
\f[B]Variable:\f[R] This is the recommended way.
You store the output in a variable, so the password never appears on
screen.
.RS 2
.IP
.nf
\f[C]
  MY_PASS=$(genpass2 16)
\f[R]
.fi
.RE
.IP \[bu] 2
\f[B]Clipboard:\f[R] You can also put the password in your clipboard
using the \f[C]xclip\f[R] command.
.RS 2
.IP
.nf
\f[C]
  genpass2 16 | xclip -selection clipboard -i
\f[R]
.fi
.RE
.SH EXAMPLES
.PP
\f[B]genpass2\f[R] 20
.PD 0
.P
.PD
G*b9APs=DX\[ha]q-(&J\[at]%x\[at]
.SH EXIT VALUES
.TP
\f[B]0\f[R]
Success
.TP
\f[B]1\f[R]
The first argument could not be parsed into a valid number.
.SH COPYRIGHT
.PP
Copyright \[co] Nicol\['a]s Castell\['a]n 2021.
License MIT.
This software is provided \[lq]AS IS\[rq], there\[cq]s no warrany of any
kind.
.SH AUTHORS
Nicol\['a]s Castell\['a]n <cnicolas.developer@gmail.com>.
